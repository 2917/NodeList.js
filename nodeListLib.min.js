(function(){function l(a){for(var c=[],b=0,g=a.length;b<g;b++){var d=a[b];if(d instanceof Node)c.push(d);else if(d instanceof NodeList||d instanceof HTMLCollection||d instanceof Array)for(var e=0,f=d.length;e<f;e++)c.push(d[e]);else return a}c.__proto__=h;return c}function k(a){return TypeError("The "+a+" Array Method Does Not Yet Exist In This Browser, NodeList.js Will Automatically Add It When It Does")}function n(a){try{HTMLElement.prototype[a].constructor===Function&&(h[a]=h[a]||function(){for(var b=
[],c=[],d=0,e=this.length;d<e;d++){var f=this[d],f=f[a].apply(f,arguments);f instanceof Node?-1===c.indexOf(f)&&c.push(f):void 0!==f&&b.push(f)}return c.length?(c.__proto__=h,c):b.length?b:this})}catch(c){Object.defineProperty(h,a,{get:function(){for(var b=[],c=0,d=this.length;c<d;c++){var e=this[c][a];e instanceof Node&&-1!==b.indexOf(e)||b.push(e)}return l(b)},set:function(b){for(var c=0,d=this.length;c<d;c++)this[c][a]=b}})}}var h={keys:Array.prototype.keys,entries:Array.prototype.entries,indexOf:Array.prototype.indexOf,
lastIndexOf:Array.prototype.lastIndexOf,every:Array.prototype.every,some:Array.prototype.some,reduce:Array.prototype.reduce,reduceRight:Array.prototype.reduceRight,pop:Array.prototype.pop,shift:Array.prototype.shift,sort:Array.prototype.sort,reverse:Array.prototype.reverse,values:Array.prototype.values||k("values"),find:Array.prototype.find||k("find"),findIndex:Array.prototype.findIndex||k("findIndex"),copyWithin:Array.prototype.copyWithin||k("copyWithin"),includes:Array.prototype.includes||function(a){return-1<
this.indexOf(a)},forEach:function(){Array.prototype.forEach.apply(this,arguments);return this},push:function(){for(var a=0,c=arguments.length;a<c;a++)if(!(arguments[a]instanceof Node))throw Error("Passed arguments must be a Node");return Array.prototype.push.apply(this,arguments)},unshift:function(){for(var a=0,c=arguments.length;a<c;a++)if(!(arguments[a]instanceof Node))throw Error("Passed arguments must be a Node");return Array.prototype.unshift.apply(this,arguments)},splice:function(){for(var a=
2,c=arguments.length;a<c;a++)if(!(arguments[a]instanceof Node))throw Error("Passed arguments must be a Node");return Array.prototype.splice.apply(this,arguments)},slice:function(a,c){var b=Array.prototype.slice.call(this,a,c);b.__proto__=h;return b},filter:function(a){a=Array.prototype.filter.call(this,a);a.__proto__=h;return a},map:function(a){a=Array.prototype.map.call(this,a);a.every(function(a){return a instanceof Node})&&(a.__proto__=h);return a},concat:function(){for(var a=0,c=arguments.length;a<
c;a++){var b=arguments[a];if(b instanceof Node)-1===this.indexOf(b)&&this.push(b);else if(b instanceof NodeList||b instanceof HTMLCollection||b instanceof Array||b.__proto__===h)for(var g=0,d=b.length;g<d;g++){var e=b[g];if(e instanceof Node)-1===this.indexOf(e)&&this.push(b);else if(e instanceof NodeList)for(var f=0,k=e.length;f<k;f++)-1===this.indexOf(b)&&this.push(e[f]);else throw Error(e.constructor.name+": "+e+" is not a Node");}else throw Error("Only Node, NodeList, HTMLCollection, or Array of (Node, NodeList, HTMLCollection)");
}return this},querySelectorAll:function(a){for(var c=[],b=0,g=this.length;b<g;b++){for(var d=[],e=this[b].querySelectorAll(a),f=0,h=e.length;f<h;f++)d.push(e[f]);c.push(d)}return l(c)},get:function(a){for(var c=[],b=0,g=this.length;b<g;b++){var d=this[b][a];d instanceof Node&&-1!==c.indexOf(d)||c.push(d)}return l(c)},set:function(a,c,b){if(b){b=0;for(var g=this.length;b<g;b++){var d=this[b];void 0!==d[a]&&(d[a]=c)}}else for(b=0,g=this.length;b<g;b++)this[b][a]=c;return this}};window.Symbol&&window.Symbol.iterator&&
(h[Symbol.iterator]=Array.prototype[Symbol.iterator]);var p=document.createElement("div"),m;for(m in p)n(m);window.$=function(a){a=document.querySelectorAll(a);for(var c=[],b=0,g=a.length;b<g;b++)c.push(a[b]);c.__proto__=h;return c};window.$.NL=h})();
